// Text
$FONT_SIZE: 16px;
$LINE_HEIGHT: 1.4;
$LINE_HEIGHT_PARAGRAPH: 1.6;
$W_NORMAL: 400;
$W_BOLD: 700;
$FONT_FAMILY_MONOSPACE: 'Noto Sans Mono CJK KR', 'Noto Sans Mono', 'Roboto Mono', monospace;
$FONT_FAMILY_NORMAL: 'Noto Sans CJK KR', 'Noto Sans KR', 'Helvetica Neue', Arial, sans-serif;

// Global header
$HEADER_HEIGHT: 72px;
$HEADER_INNER_PADDING: 11px;
$HEADER_INNER_HEIGHT: $HEADER_HEIGHT - ($HEADER_INNER_PADDING * 2);
$HEADER_SHADOW: 0px 0px 2px rgba(170, 170, 170, .35);

// Content
$CONTENT_WIDTH: 1180px;
$CONTENT_PADDING: 20px;
$CONTENT_RADIUS: 4px;

// Position: fixed
$FIXED_MARGIN_HORI: 3vw;
$FIXED_MARGIN_VERT: 25px;

// Effects
$EFFECT_PUSH_SCALE: .92;
$EFFECT_GIANT_SCALE: 1.3;

// Color
$COLOR_GRAY: #7c7c7c;
$COLOR_LIGHT: #f8f8f8;
$COLOR_LIGHT_H: #fbfbfb;
$COLOR_LIGHT_TH: rgba(251, 251, 251, .75);
$COLOR_LIGHT_XH: #ffffff;
$COLOR_DARK: #000000;
$COLOR_DARK_H: #191919;
$COLOR_DARK_TH: rgba(0, 0, 0, .75);
$COLOR_DARK_XH: #333333;
$COLOR_HL: var(--color-hl);
$COLOR_DEF: var(--color-def);
$COLOR_DEF_H: var(--color-def-hl);
$COLOR_DEF_TH: var(--color-def-thl);
$COLOR_DEF_XH: var(--color-def-xhl);
$COLOR_INV: var(--color-inv);
$COLOR_INV_H: var(--color-inv-hl);
$COLOR_INV_TH: var(--color-inv-thl);
$COLOR_INV_XH: var(--color-inv-xhl);

// Transition
$TRANSIT_PROPERTY : .32s ease-in-out;

@function getTransitProperty($props) {
  $tsFullText: '';
  $tsSeparator: '';
  @each $prop in $props {
    $tsFullText: $tsFullText + $tsSeparator + $prop + ' ' + $TRANSIT_PROPERTY;
    $tsSeparator: ', ';
  }
  @return #{$tsFullText};
}

@mixin transit($props...) {
  transition: getTransitProperty($props);
}

// Spinner
$SPINNER_SIZE: 48px;

@import "SpinThatShit/src/loaders";
@mixin spinner {
  @include loader06(
    $size: $SPINNER_SIZE,
    $align: middle,
    $color: $COLOR_GRAY,
    $duration: 1s,
    $border-size: 4px
  );
}

// Print View
@mixin noPrint {
  @media print {
    display: none !important;
  }
}

// Compact View
$CV_DIVISOR : 1.4;

@function comp($prop) {
  @return $prop / $CV_DIVISOR;
}

@mixin onCompactView {
  @media screen and (max-width: #{$CONTENT_WIDTH + $CONTENT_PADDING - 1px}) {
    @content;
  }
}

@mixin onSemiCompactView {
  @media screen and (max-width: 799px) {
    @content;
  }
}

@mixin onSuperCompactView {
  @media screen and (max-width: 419px) {
    @content;
  }
}

@mixin onUltraCompactView {
  @media screen and (max-width: 329px) {
    @content;
  }
}

// Anchor
@mixin onAnchorActive {
  &:hover, &:target, &:focus {
    @content;
  }
}

@mixin notOnAnchorActive {
  &:not(:hover):not(:target):not(:focus) {
    @content;
  }
}

@mixin noUnderlineEffect {
  @include onAnchorActive {
    text-decoration: none;
  }
}

@mixin underlineEffect {
  @include onAnchorActive {
    text-decoration: underline;
  }
}

@mixin colorEffect($color : $COLOR_DEF) {
  @include onAnchorActive {
    color: $color;
  }
}

// Others
@function strip($data) {
  @if type-of($data) == 'number' and not unitless($data) {
    @return $data / ($data * 0 + 1);
  }
  @return $data;
}

@import "common";

// ? About body_id
// tt-body-index = main page
// tt-body-page = an article, a page
// tt-body-guestbook = guestbook page
// tt-body-tag = tag page, list of articles in specified tag
// tt-body-category = list of articles in specified category
// tt-body-search = list of articles which are results of search

// Article list type
body[data-page-type="tt-body-index"],
body[data-page-type="tt-body-tag"],
body[data-page-type="tt-body-category"],
body[data-page-type="tt-body-search"] {
  #content article {
    padding: $CONTENT_PADDING;
    background-color: $COLOR_INV_H;
    box-shadow: $HEADER_SHADOW;
    border-radius: 4px;
    position: relative;

    @include transit(background-color);

    &:not(:first-of-type) {
      margin-top: $CONTENT_PADDING;
    }

    .ct-header {
      .title {
        margin-top: 0;
        font-size: 2.1rem;
      }
    }
  }
}

// Article post type
body[data-page-type="tt-body-page"] {
  main {
    width: $CONTENT_WIDTH / $LINE_HEIGHT;
  }
}

// Guestbook type
body[data-page-type="tt-body-guestbook"] {
}

.ct-header {
  .title {
    margin: 2rem 0 1rem;
    font-size: 3rem;
    font-weight: $W_BOLD;

    a {
      font-size: inherit;
    }
  }

  .meta {
    $META_HEIGHT: 1.1rem;

    color: $COLOR_GRAY;
    margin: 1rem 0;
    font-size: $META_HEIGHT;

    & > *:not(:last-child) {
      margin-right: $CONTENT_PADDING * 1.4;
    }

    a {
      color: $COLOR_GRAY;
    }

    .date::before {
      background: url('./images/heart.svg');
    }

    .category::before {
      background: url('./images/tag.svg');
      transform: scale(.96);
    }

    .comments-count::before {
      background: url('./images/comment.svg');
    }

    .date, .category, .comments-count {
      &::before {
        content: '';
        width: $META_HEIGHT;
        height: $META_HEIGHT;
        background-size: contain;
        display: inline-block;
        background-repeat: no-repeat;
        margin: 0 7.5px -2.5px 0;
        filter: brightness(.25);

        @include transit(filter);
      }
    }
  }
}

.ct-body {
  margin: calc(2rem + #{$CONTENT_PADDING}) 0;

  h1 {
    font-size: 2rem;
  }

  h2 {
    font-size: 1.7rem;
  }

  h3 {
    font-size: 1.4rem;
  }

  h4 {
    font-size: 1.2rem;
  }

  h5, blockquote {
    font-size: 1.1rem;
  }

  h6, a, abbr, address, caption, code, del, i, ins, li, p, pre, q, ruby, s, samp, span, td, u, var, b, cite, strong, th {
    font-size: 1rem;
  }

  small, figcaption, kbd {
    font-size: .85rem;
  }

  a, abbr, address, blockquote, caption, code, del, figcaption, i, ins, li, p, pre, q, rp, rt, ruby, s, samp, small, span, sub, sup, td, u, var {
    font-weight: $W_NORMAL;
  }
  b, cite, h1, h2, h3, h4, h5, h6, kbd, strong, th {
    font-weight: $W_BOLD;
  }

  a, abbr, address, blockquote, caption, code, del, figcaption, i, ins, li, p, pre, q, rp, rt, ruby, s, samp, small, span, sub, sup, td, u, var, b, cite, h1, h2, h3, h4, h5, h6, kbd, strong, th {
    line-height: $LINE_HEIGHT;
    word-wrap: break-word;
  }

  a {
    color: $COLOR_HL;
    opacity: .9;

    @include transit(opacity);
    @include onAnchorActive {
      opacity: 1;
    }
  }

  kbd {
    border-radius: $CONTENT_RADIUS;
    box-shadow: $HEADER_SHADOW;
    background-color: $COLOR_INV_H;
    margin: 0 3px;
    padding: 2px 6px;
    border-bottom: 3px solid $COLOR_GRAY;

    @include transit(background-color);
  }

  caption, figcaption, cite {
    color: $COLOR_GRAY;
    font-style: italic;
  }

  rp {
    color: $COLOR_GRAY;
  }

  blockquote {
    margin-right: 3rem;
    margin-left: 2rem;
    padding-right: 2.1rem;
    padding-top: .5rem;
    padding-bottom: .5rem;
    border-right: 1px solid rgba(140, 140, 140, .2);
    width: max-content;
    max-width: calc(100% - 9.1rem);

    &::after {
      height: 1.84rem;
      width: 1.84rem;
      margin-top: .3rem;
      right: -3rem;
    }
  }

  q {
    padding-right: 1.26rem;

    &::before {
      display: none;
    }

    &::after {
      height: .8rem;
      width: .8rem;
      margin-top: 3px;
      right: 0;
    }
  }

  blockquote, q {
    position: relative;
    font-style: italic;

    &, p, span {
      color: $COLOR_GRAY;
    }

    &::after {
      content: '';
      background-image: url('./images/quote.svg');
      background-repeat: no-repeat;
      background-size: contain;
      display: inline-block;
      position: absolute;
      top: 0;
      filter: invert(.45);
    }
  }

  code, pre, samp {
    font-family: $FONT_FAMILY_MONOSPACE, $FONT_FAMILY_NORMAL;
    background-color: $COLOR_INV_H;
    box-shadow: $HEADER_SHADOW;
    padding: 0px 4px 1px;
    margin: 0px 1px;
    border-radius: $CONTENT_RADIUS;
    color: #586377;
    user-select: none;

    @include transit(background-color, color);
  }

  pre, samp {
    padding: 8px 12px;
    margin: $CONTENT_PADDING 0;

    code {
      background-color: transparent;
      box-shadow: none;
      padding: 0;
      margin: 0;
      border-radius: 0;
      color: $COLOR_DEF;

      @include transit(color);

      @import "hljs-customization";
      @include hljs((
        'red': #E53935,
        'orange': #F76D47,
        'yellow': #FFB62C,
        'green': #91B859,
        'cyan': #39ADB5,
        'blue': #6182B8,
        'paleblue': #8796B0,
        'purple': #7C4DFF,
        'brown': #C17E70,
        'gray': #686868
      ));

      span {
        @include transit(color);
      }
    }
  }

  table {
    border-collapse: collapse;
    border-spacing: 0;
    border: none;
    border-radius: $CONTENT_RADIUS;
    background-color: $COLOR_INV_H;
    box-shadow: $HEADER_SHADOW;
    margin: $CONTENT_PADDING 0;
    width: 100%;

    @include transit(background-color);

    tr {
      @mixin bottomBorder($width, $color, $opacity : 1) {
        position: relative;

        &::after {
          content: '';
          background-color: $color;
          opacity: $opacity;
          height: $width;
          width: 100%;
          position: absolute;
          bottom: 0;
          left: 0;
        }
      }

      &:first-child th {
        border-bottom: 3px solid $COLOR_HL;
      }

      &:not(:first-child) th:first-child {
        border-right: 1.5px solid $COLOR_HL;
      }

      &:not(:first-child):not(:last-child) th:first-child {
        @include bottomBorder(1px, $COLOR_GRAY, .4);
      }

      &:nth-child(even) {
        td {
          background-color: rgba(160, 160, 160, .15);
        }
      }

      th {
        color: $COLOR_HL;
        font-weight: $W_BOLD;
        padding: 8px 12px;
      }

      td {
        padding: 6px 10px;
      }

      th, td {
        border-width: 0;
      }
    }
  }

  & > ul, & > p > ul {
    & > li {
      list-style-type: '⁠—   ';

      &::marker {
        color: $COLOR_HL;
      }
    }
  }

  & > ul, & > p > ul, ol {
    ul, & > ul ul, ol ul {
      & > li {
        list-style-type: '•  ';

        ul li {
          list-style-type: '‣  ';
        }
      }
    }
  }

  ul, ol {
    padding: 0 0 0 ($CONTENT_PADDING * 2);

    ul, ol {
      padding: 0 0 0 $CONTENT_PADDING * 1.4;
    }
  }

  hr {
    cursor: default !important;

    @include transit(filter);
  }

  .copiable {
    position: relative;
    cursor: pointer;
    overflow: visible;

    &::after {
      position: absolute;
      content: '복사 완료';
      font-family: $FONT_FAMILY_NORMAL;
      background-color: $COLOR_INV_H;
      color: $COLOR_DEF;
      box-shadow: $HEADER_SHADOW;
      border-radius: $CONTENT_RADIUS;
      font-style: normal;
      font-weight: $W_NORMAL;
      width: max-content;
      padding: 3px 7px 4px;
      left: 0;
      font-size: .85rem;
      z-index: -1;
      opacity: 0;
      top: calc(-1 * (1rem + 11px));
      user-select: none;

      @include transit(top, color, background-color, opacity);
    }

    &.copied::after {
      top: calc(-1 * (1rem + 14px));
      opacity: 1;
    }

    &.failed::after {
      background-color: $COLOR_HL;
      color: $COLOR_LIGHT;
      content: '복사 실패';
    }

    &.visible::after {
      z-index: 2;
    }
  }

  .mjx-chtml {
    margin: 0 2px;

    &, span {
      font-size: 100%;
      line-height: 0;
    }
  }

  .fileblock {
    background-color: $COLOR_INV_H;
    border-color: transparent;
    border-radius: $CONTENT_RADIUS;
    box-shadow: $HEADER_SHADOW;
    user-select: none;

    @include onAnchorActive {
      transform: scale($EFFECT_PUSH_SCALE);
    }
    @include transit(background-color, transform);

    .image {
      filter: brightness(1);

      @include transit(filter);
    }

    .desc {
      .filename {
        color: $COLOR_DEF_H;
      }

      .size {
        color: $COLOR_GRAY;
      }
    }

    a::after {
      filter: contrast(50%);

      @include transit(filter);
    }
  }

  .btn-toggle-moreless {
    margin: 1rem auto !important;
    width: max-content;
    display: block;
    border-radius: $CONTENT_RADIUS;
    box-shadow: $HEADER_SHADOW;
    background-color: $COLOR_INV_H;
    color: $COLOR_DEF_H !important;
    padding: 8px 13px;
    user-select: none;

    @include noUnderlineEffect;
    @include colorEffect($COLOR_DEF_H);
    @include onAnchorActive {
      transform: scale($EFFECT_PUSH_SCALE);
    }
    @include transit(background-color, color, transform);
  }

  .moreless-content {
    margin: 1rem auto 2rem;
    padding: 2rem;
    border-radius: $CONTENT_RADIUS;
    box-shadow: $HEADER_SHADOW;
    background-color: $COLOR_INV_H;
    width: max-content;
    max-width: calc(100% - 4rem);

    @include transit(background-color);
  }

  .imageslideblock {
    box-shadow: $HEADER_SHADOW;
    border-radius: $CONTENT_RADIUS;
    background-color: $COLOR_INV_H;
    margin: 1rem auto !important;
    padding: 22px 44px 0;
    width: max-content;

    @include transit(background-color);

    .ico-prev, .ico-next {
      filter: contrast(0%);
    }

    .image-container {
      background-color: transparent;
    }

    .mark {
      @include transit(filter);

      span {
        @include transit(background-color);
      }
    }
  }
}

.ct-thumbnail {
  position: relative;
  float: right;
  margin: .6rem .6rem $CONTENT_PADDING $CONTENT_PADDING;
  height: 0;
  max-height: 250px;
  z-index: 2;

  @include transit(height);

  .container {
    height: 100%;
    width: 250px;
    box-shadow: $HEADER_SHADOW;
    border-radius: $CONTENT_RADIUS;
    background-size: cover;
    background-repeat: no-repeat;
    background-color: $COLOR_INV_XH;
    background-position: center;

    @include transit(transform, background-color);
    @include onAnchorActive {
      transform: scale($EFFECT_PUSH_SCALE);
    }
  }
}

.ct-excerpt {
  color: $COLOR_DEF_XH;
  opacity: .8;

  @include transit(color);
}

.ct-see-more {
  float: right;
  margin-left: 1rem;
  margin-top: .6rem;
  border-radius: $CONTENT_RADIUS;
  box-shadow: $HEADER_SHADOW;
  background-color: $COLOR_INV_XH;
  color: $COLOR_DEF_H !important;
  padding: 5px 10px;
  user-select: none;

  @include noUnderlineEffect;
  @include colorEffect($COLOR_DEF_H);
  @include onAnchorActive {
    transform: scale($EFFECT_PUSH_SCALE);
  }
  @include transit(background-color, color, transform);
}

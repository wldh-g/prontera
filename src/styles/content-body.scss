@import "common";

// ? About body_id
// tt-body-index = main page
// tt-body-page = an article, a page
// tt-body-guestbook = guestbook page
// tt-body-tag = tag page, list of articles in specified tag
// tt-body-category = list of articles in specified category
// tt-body-search = list of articles which are results of search

// Guestbook type
body[data-page-type="tt-body-guestbook"] {
}

// Article list type
body[data-page-type="tt-body-index"],
body[data-page-type="tt-body-tag"],
body[data-page-type="tt-body-category"],
body[data-page-type="tt-body-search"] {
  #content article {
    padding: 0;

    a {
      background-color: $COLOR_INV_H;
      box-shadow: $RADBOX_SHADOW;
      border-radius: 4px;
      position: relative;
      display: flex;
      flex-flow: row-reverse;
      margin: $CONTENT_PADDING 0;
      width: 100%;
      overflow: hidden;

      @include transit(background-color, transform, color);
      @include onFocus {
        transform: scale($EFFECT_PUSH_SCALE);
        color: $COLOR_DEF;
      }
      @include onCompactView {
        flex-flow: column;
      }

      .ct-thumbnail,
      .ct-summary {
        display: block;
      }

      .ct-thumbnail {
        width: 205px;
        min-width: 205px;
        max-width: 205px;
        overflow: hidden;

        @include onCompactView {
          height: 205px;
          width: initial;
          min-width: initial;
          max-width: initial;
          max-height: 205px;
          min-height: 205px;
        }

        img {
          width: 205px;
          height: 100%;
          object-fit: cover;
          background-color: $COLOR_GRAY_O;

          @include onCompactView {
            width: 100%;
            height: 205px;
          }
        }
      }

      .ct-summary {
        padding: $CONTENT_PADDING;
        width: 100%;
        box-sizing: border-box;

        .ct-header {
          .title {
            margin-top: 0;
            font-size: 2.1rem;
          }
        }

        .ct-excerpt {
          color: $COLOR_DEF_H;
          opacity: 0.8;

          @include transit(color);
        }
      }
    }
  }
}

// Article post type
body[data-page-type="tt-body-page"] {
  #content article {
    display: table;
    box-sizing: border-box;
    padding: 0 ($LINE_HEIGHT * $CONTENT_PADDING);

    @include radbox;
    @include onCompactView {
      padding: 0 $CONTENT_PADDING;
    }
  }
}

.ct-header {
  .title {
    margin: 2rem 0 1rem;
    font-size: 3rem;
    font-weight: $WEIGHT_BOLD;
    word-wrap: break-word;
    word-break: keep-all;

    @include onCompactView {
      word-break: normal;
    }

    a {
      font-size: inherit;
    }
  }

  .meta {
    $META_HEIGHT: 1.1rem;

    color: $COLOR_GRAY;
    margin: 1rem 0;
    font-size: $META_HEIGHT;

    & > *:not(:last-child) {
      margin-right: $CONTENT_PADDING * 1.4;

      @include onCompactView {
        margin-bottom: 4px;
      }
    }

    & > span {
      display: inline-block;
      word-break: keep-all;
      word-wrap: normal;
    }

    a {
      color: $COLOR_GRAY;
    }

    .date::before {
      background: url("./images/heart.svg");
    }

    .category::before {
      background: url("./images/tag.svg");
      transform: scale(0.96);
    }

    .comments-count::before {
      background: url("./images/comment.svg");
    }

    .date,
    .category,
    .comments-count {
      &::before {
        content: "";
        width: $META_HEIGHT;
        height: $META_HEIGHT;
        background-size: contain;
        display: inline-block;
        background-repeat: no-repeat;
        margin: 0 7.5px -2.5px 0;
        filter: brightness(0.75);

        @include transit(filter);
      }
    }
  }
}

.ct-body {
  margin: calc(2rem + #{$CONTENT_PADDING}) 0;

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin: 1.4em 0 0;

    & + {
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        margin: 0.5em 0 0;
      }
    }
  }

  p {
    margin: 1em 0;
  }

  h1 {
    font-size: 2.5rem;
  }

  h2 {
    font-size: 2rem;
  }

  h3 {
    font-size: 1.6rem;
  }

  h4 {
    font-size: 1.2rem;
  }

  h5,
  blockquote {
    font-size: 1.1rem;
  }

  h6,
  a,
  abbr,
  address,
  caption,
  code,
  del,
  i,
  ins,
  li,
  p,
  pre,
  q,
  ruby,
  s,
  samp,
  span,
  td,
  u,
  var,
  b,
  cite,
  strong,
  th {
    font-size: 1rem;
  }

  small,
  figcaption,
  kbd {
    font-size: 0.85rem;
  }

  a,
  abbr,
  address,
  blockquote,
  caption,
  code,
  del,
  figcaption,
  i,
  ins,
  li,
  p,
  pre,
  q,
  rp,
  rt,
  ruby,
  s,
  samp,
  small,
  span,
  sub,
  sup,
  td,
  u,
  var {
    font-weight: $WEIGHT_NORMAL;
  }
  b,
  cite,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  kbd,
  strong,
  th {
    font-weight: $WEIGHT_BOLD;
  }

  a,
  abbr,
  address,
  blockquote,
  caption,
  code,
  del,
  figcaption,
  i,
  ins,
  p,
  pre,
  q,
  rp,
  rt,
  ruby,
  s,
  samp,
  small,
  span,
  sub,
  sup,
  td,
  u,
  var,
  b,
  cite,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  kbd,
  strong,
  th {
    line-height: inherit;
    word-wrap: break-word;
  }

  li {
    line-height: 1.6;
    word-wrap: break-word;
  }

  a {
    color: $COLOR_HL;
    opacity: 0.9;

    @include transit(opacity);
    @include onFocus {
      opacity: 1;
    }
  }

  kbd {
    border-radius: $RADBOX_RADIUS;
    box-shadow: $RADBOX_SHADOW;
    background-color: $COLOR_INV_H;
    margin: 0 3px;
    padding: 2px 6px;
    border-bottom: 3px solid $COLOR_GRAY;

    @include transit(background-color);
  }

  caption,
  figcaption,
  cite {
    color: $COLOR_GRAY;
    font-style: italic;
    margin: 0 0.6em;
  }

  rp {
    color: $COLOR_GRAY;
  }

  blockquote {
    margin-right: 3rem;
    margin-left: 2rem;
    padding-right: 2.1rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    border-right: 1px solid rgba(140, 140, 140, 0.2);
    width: max-content;
    max-width: calc(100% - 9.1rem);

    &::after {
      height: 1.84rem;
      width: 1.84rem;
      margin-top: 0.3rem;
      right: -3rem;
    }
  }

  q {
    padding-right: 1.26rem;

    &::before {
      display: none;
    }

    &::after {
      height: 0.8rem;
      width: 0.8rem;
      margin-top: 3px;
      right: 0;
    }
  }

  blockquote,
  q {
    position: relative;
    font-style: italic;

    &,
    p,
    span {
      color: $COLOR_GRAY;
    }

    &::after {
      content: "";
      background-image: url("./images/quote.svg");
      background-repeat: no-repeat;
      background-size: contain;
      display: inline-block;
      position: absolute;
      top: 0;
      filter: invert(0.45);
    }
  }

  code,
  pre,
  samp {
    font-family: $FONT_FAMILY_MONOSPACE, $FONT_FAMILY_DEFAULT;
    background-color: $COLOR_INV_H;
    box-shadow: $RADBOX_SHADOW;
    padding: 0px 4px 1px;
    margin: 0px 1px;
    border-radius: $RADBOX_RADIUS;
    color: #586377;
    user-select: none;

    @include transit(background-color, color);
  }

  pre,
  samp {
    padding: 8px 12px;
    margin: $CONTENT_PADDING 0;

    code {
      background-color: transparent;
      box-shadow: none;
      padding: 0;
      margin: 0;
      border-radius: 0;
      color: $COLOR_DEF;

      @include transit(color);
      @include applyHighlightJS($HLJS_LIGHT);

      span {
        @include transit(color);
      }
    }
  }

  img {
    border-radius: $RADBOX_RADIUS / 2;
  }

  figure img {
    width: auto;
  }

  table {
    border-collapse: collapse;
    border-spacing: 0;
    border: none;
    border-radius: $RADBOX_RADIUS;
    background-color: $COLOR_INV_H;
    box-shadow: $RADBOX_SHADOW;
    margin: $CONTENT_PADDING 0;
    width: 100%;

    @include transit(background-color);

    tr {
      @mixin bottomBorder($width, $color, $opacity: 1) {
        position: relative;

        &::after {
          content: "";
          background-color: $color;
          opacity: $opacity;
          height: $width;
          width: 100%;
          position: absolute;
          bottom: 0;
          left: 0;
        }
      }

      &:first-child th {
        border-bottom: 3px solid $COLOR_HL;
      }

      &:not(:first-child) th:first-child {
        border-right: 1.5px solid $COLOR_HL;
      }

      &:not(:first-child):not(:last-child) th:first-child {
        @include bottomBorder(1px, $COLOR_GRAY, 0.4);
      }

      &:nth-child(even) {
        td {
          background-color: rgba(160, 160, 160, 0.15);
        }
      }

      th {
        color: $COLOR_HL;
        font-weight: $WEIGHT_BOLD;
        padding: 8px 12px;
      }

      td {
        padding: 6px 10px;
      }

      th,
      td {
        border-width: 0;
      }
    }
  }

  & > ul,
  & > p > ul,
  .moreless-content > ul {
    & > li {
      list-style-type: "⁠—   ";

      &::marker {
        color: $COLOR_GRAY;
      }
    }
  }

  & > ul,
  & > p > ul,
  .moreless-content > ul,
  ol {
    ul,
    & > ul ul,
    ol ul {
      & > li {
        list-style-type: "•  ";

        ul li {
          list-style-type: "‣  ";
        }
      }
    }
  }

  ul,
  ol {
    padding: 0 0 0 ($CONTENT_PADDING * 2);

    ul,
    ol {
      padding: 0 0 0 $CONTENT_PADDING * 1.4;
    }
  }

  li:not(:last-of-type) {
    margin-bottom: 0.6em;
  }

  hr {
    cursor: default !important;

    @include transit(filter);
  }

  .copiable {
    position: relative;
    cursor: pointer;
    overflow: auto;

    &::after {
      position: absolute;
      content: "복사 완료";
      font-family: $FONT_FAMILY_DEFAULT;
      background-color: $COLOR_INV_H;
      color: $COLOR_DEF;
      box-shadow: $RADBOX_SHADOW;
      border-radius: $RADBOX_RADIUS;
      font-style: normal;
      font-weight: $WEIGHT_NORMAL;
      width: max-content;
      padding: 3px 7px 4px;
      left: 0;
      font-size: 0.85rem;
      z-index: -1;
      opacity: 0;
      top: calc(-1 * (1rem + 11px));
      user-select: none;

      @include transit(top, color, background-color, opacity);
    }

    &.copied::after {
      top: calc(-1 * (1em + 20px));
      opacity: 1;
    }

    &.failed::after {
      background-color: $COLOR_HL;
      color: $COLOR_LIGHT;
      content: "복사 실패";
    }

    &.visible::after {
      z-index: 2;
    }
  }

  .fileblock {
    background-color: $COLOR_INV_H;
    border-color: transparent;
    border-radius: $RADBOX_RADIUS;
    box-shadow: $RADBOX_SHADOW;
    user-select: none;
    line-height: 1;

    @include onFocus {
      transform: scale($EFFECT_PUSH_SCALE);
    }
    @include transit(background-color, transform);

    .image {
      filter: brightness(1);

      @include transit(filter);
    }

    .desc {
      .filename {
        color: $COLOR_DEF_H;
      }

      .size {
        color: $COLOR_GRAY;
      }
    }

    a::after {
      filter: contrast(50%);

      @include transit(filter);
    }
  }

  .btn-toggle-moreless {
    margin: 1rem auto !important;
    width: max-content;
    display: block;
    border-radius: $RADBOX_RADIUS;
    box-shadow: $RADBOX_SHADOW;
    background-color: $COLOR_INV_H;
    color: $COLOR_DEF_H !important;
    padding: 8px 13px;
    user-select: none;

    @include onFocus {
      transform: scale($EFFECT_PUSH_SCALE);
      text-decoration: none;
      color: $COLOR_DEF_H;
    }
    @include transit(background-color, color, transform);
  }

  .moreless-content {
    margin: 1rem auto 2rem;
    padding: 2rem;
    border-radius: $RADBOX_RADIUS;
    box-shadow: $RADBOX_SHADOW;
    background-color: $COLOR_INV_H;
    width: max-content;
    max-width: calc(100% - 4rem);

    @include transit(background-color);
  }

  .imageslideblock {
    box-shadow: $RADBOX_SHADOW;
    border-radius: $RADBOX_RADIUS;
    background-color: $COLOR_INV_H;
    margin: 1rem auto !important;
    padding: 22px 44px 0;
    width: max-content;

    @include transit(background-color);

    .ico-prev,
    .ico-next {
      filter: contrast(0%);
    }

    .image-container {
      background-color: transparent;
    }

    .mark {
      @include transit(filter);

      span {
        @include transit(background-color);
      }
    }
  }

  .container_postbtn {
    padding-bottom: 0;
  }
}

.mjx-chtml {
  margin: 0 3px !important;

  &,
  span {
    font-size: 100%;
    line-height: 0;
  }
}

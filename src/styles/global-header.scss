@import "common";

$HEADER_HEIGHT: $HEADER_HEIGHT;
$HEADER_INNER_PADDING: 11px;
$HEADER_INNER_HEIGHT: $HEADER_HEIGHT - ($HEADER_INNER_PADDING * 2);

$IDENTITY_PADDING_HORI: 15px;

$MENU_BOX_PADDING: 10px;
$MENU_INDICATOR_HEIGHT: 3px;

$SHORTCUT_SIZE: 26px;
$SHORTCUT_PADDING_VERT: ($HEADER_INNER_HEIGHT - $SHORTCUT_SIZE) / 2;
$SHORTCUT_PADDING_VERT_C: (comp($HEADER_INNER_HEIGHT) - $SHORTCUT_SIZE) / 2;
$SHORTCUT_PADDING_HORI: 20px;

$MDB_WIDTH: 40px;
$MDB_HEIGHT: 22px;
$MDB_BALL_SIZE: 14px;
$MDB_ELASTICITY: 4px;
$MDB_FUSS: 3px;
$MDB_MARGIN: ($MDB_HEIGHT - $MDB_BALL_SIZE) / 2;
$MDB_TOP_FIX: ($MDB_HEIGHT - 1.2px - $MDB_BALL_SIZE) / 3;

header.global {
  z-index: 100;
  max-width: 100vw;
  width: 100%;
  height: $HEADER_HEIGHT;
  box-sizing: border-box;
  padding: 0 $VIEWPORT_MARGIN_HORI;
  background-color: $COLOR_INV_H;
  box-shadow: $RADBOX_SHADOW;
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  justify-content: space-between;
  user-select: none;

  @include transit(top, background-color);
  @include onCompactView {
    height: comp($HEADER_HEIGHT) * 2;
    display: block;
    padding: 0;
  }

  &.hidden {
    top: -1 * ($HEADER_HEIGHT + 4px);

    @include onCompactView {
      top: -1 * (comp($HEADER_HEIGHT) * 2 + 4px);
    }
  }

  & > *,
  & > .flex > * {
    height: $HEADER_HEIGHT;
    display: inline-flex;
    box-sizing: border-box;

    @include onCompactView {
      height: comp($HEADER_HEIGHT);
      display: flex;
    }

    * {
      padding: 0;
    }
  }

  %paddedComponent {
    vertical-align: middle;
    padding: $HEADER_INNER_PADDING 0;
    height: $HEADER_INNER_HEIGHT;
    box-sizing: content-box;

    @include onCompactView {
      padding: comp($HEADER_INNER_PADDING) 0;
      height: comp($HEADER_INNER_HEIGHT);
    }

    img,
    svg {
      width: auto;
      height: $HEADER_INNER_HEIGHT;
      max-height: $HEADER_INNER_HEIGHT;

      @include onCompactView {
        height: comp($HEADER_INNER_HEIGHT);
        max-height: comp($HEADER_INNER_HEIGHT);
      }
    }
  }

  #identity {
    position: relative;

    @extend %paddedComponent;
    @include onFocus {
      &::before {
        opacity: 1;
      }
    }
    @include onCompactView {
      padding-left: comp($IDENTITY_PADDING_HORI);
      padding-right: comp($IDENTITY_PADDING_HORI);
    }

    &::before {
      position: absolute;
      top: 0;
      left: -1 * $IDENTITY_PADDING_HORI;
      padding: 0 $IDENTITY_PADDING_HORI;
      box-sizing: content-box;
      width: 100%;
      height: $HEADER_HEIGHT;
      background-color: $COLOR_GRAY_O;
      opacity: 0;
      z-index: -1;
      content: "";

      @include transit(opacity);
      @include onCompactView {
        left: -1 * comp($IDENTITY_PADDING_HORI);
        padding: 0 comp($IDENTITY_PADDING_HORI);
        height: comp($HEADER_HEIGHT);
      }
    }

    //- Identity Logo
    img {
      animation: shiney 3.2s ease-in-out infinite;
      padding-right: 10px;
    }

    //- Identity Text
    span {
      font-size: $HEADER_INNER_HEIGHT / $LINE_HEIGHT;
      font-weight: $WEIGHT_BOLD;

      @include onCompactView {
        font-size: comp($HEADER_INNER_HEIGHT / $LINE_HEIGHT);
      }
    }
  }

  #menu ul {
    display: flex;
    margin: 0;

    @include onCompactView {
      width: 100vw;
      overflow-x: auto;
      overflow-y: hidden;
    }

    &:hover li:not(:hover),
    &:focus-within li:not(:focus-within) {
      &:not(.current) {
        padding-left: 10px + $MENU_BOX_PADDING;
        padding-right: 10px + $MENU_BOX_PADDING;

        &::before {
          width: 0;
          left: initial;
        }

        a {
          color: $COLOR_DEF;
        }
      }

      a {
        @include transit(color);
      }
    }

    li {
      position: relative;
      display: table;
      cursor: pointer;
      box-sizing: border-box;
      list-style: none;
      min-width: 110px - (2 * $MENU_BOX_PADDING);
      max-width: 25vw;
      padding: 0 (10px + $MENU_BOX_PADDING) ($MENU_INDICATOR_HEIGHT / 2);

      @include transit(padding);
      @include onCompactView {
        min-width: 80px - (2 * $MENU_BOX_PADDING);

        &::before {
          opacity: 0 !important;
          background-color: $COLOR_GRAY_O !important;
          width: 100% !important;
          transform: none !important;
          height: comp($HEADER_HEIGHT);

          @include transitImportant(background-color, opacity);
        }

        &.current a::after {
          opacity: 0.8;
          background-color: $COLOR_HL;
        }
      }

      &::before {
        content: "";
        background-color: $COLOR_GRAY_O;
        position: absolute;
        width: 0;
        right: 0;
        height: $HEADER_HEIGHT;
        transform: skew(-15deg);

        @include transit(width);
      }

      &.current {
        &::before {
          background-color: $COLOR_HL;
        }

        a {
          color: $COLOR_LIGHT;

          @include onCompactView {
            color: $COLOR_DEF;
          }
        }
      }

      &.current,
      &:hover,
      &:focus-within {
        padding-left: 10px + $MENU_BOX_PADDING * 2;
        padding-right: 10px + $MENU_BOX_PADDING * 2;

        @include onCompactView {
          padding-left: 10px + $MENU_BOX_PADDING;
          padding-right: 10px + $MENU_BOX_PADDING;
        }

        &::before {
          width: 100%;
          left: 0;
        }
      }

      &:hover,
      &:focus-within {
        &::before {
          opacity: 1 !important;
        }
      }

      a {
        position: relative;
        display: table-cell;
        vertical-align: middle;
        text-align: center;
        height: $HEADER_HEIGHT;
        font-size: 1.2rem;
        color: $COLOR_DEF;

        @include transit(font-size);
        @include onCompactView {
          font-size: 1.1rem;
          height: comp($HEADER_HEIGHT);
          min-width: max-content;
        }
        @include onSuperCompactView {
          font-size: 0.92rem;
        }
        @include onFocus {
          text-decoration: none;
        }

        &::after {
          position: absolute;
          width: 100%;
          top: calc(50% + #{$LINE_HEIGHT} * 1em / 2 + 3px);
          height: comp($MENU_INDICATOR_HEIGHT);
          left: 0;
          border-radius: $MENU_INDICATOR_HEIGHT;
          opacity: 0;
          content: "";
          z-index: -1;

          @include transit(opacity);
        }
      }
    }
  }

  #others {
    @include onCompactView {
      position: absolute;
      right: 10px;
      top: 0;
    }

    #shortcuts {
      margin: 0;

      @extend %paddedComponent;
      @include onSuperCompactView {
        display: none;
      }

      a {
        padding: $SHORTCUT_PADDING_VERT $SHORTCUT_PADDING_HORI
          $SHORTCUT_PADDING_VERT 0;

        @include onCompactView {
          padding: $SHORTCUT_PADDING_VERT_C comp($SHORTCUT_PADDING_HORI)
            $SHORTCUT_PADDING_VERT_C 0;
        }

        &:hover,
        &:focus {
          img,
          svg {
            opacity: 1;
          }
        }

        img,
        svg {
          height: $SHORTCUT_SIZE;
          width: auto;
          fill: $COLOR_DEF;
          opacity: 0.6;

          @include transit(opacity, fill);
        }
      }
    }

    #modarkbul {
      display: table;
      border-spacing: 10px;
      cursor: pointer;
      opacity: 0.3;

      @extend %paddedComponent;
      @include transit(opacity);
      @include onCompactView {
        margin-top: -1 * comp(10px);
      }
      @include onUltraCompactView {
        display: none;
      }

      & > * {
        display: table-cell;
        vertical-align: middle;
      }

      &:hover,
      &:focus {
        .icon {
          opacity: 1;
        }

        .container .border label {
          left: $MDB_WIDTH - $MDB_MARGIN - $MDB_BALL_SIZE - $MDB_ELASTICITY -
            $MDB_FUSS;
          width: $MDB_BALL_SIZE + $MDB_ELASTICITY;
          opacity: 1;

          &.dark {
            left: $MDB_MARGIN + $MDB_FUSS;
          }
        }
      }

      .container {
        .border {
          border-radius: $MDB_HEIGHT;
          width: $MDB_WIDTH;
          height: $MDB_HEIGHT;
          position: relative;
          background-color: $COLOR_GRAY_O;
          margin-top: $MDB_TOP_FIX;

          @include transit(background-color);
          @include onCompactView {
            margin-top: $MDB_TOP_FIX * 2;
          }

          label {
            position: absolute;
            width: $MDB_BALL_SIZE;
            height: $MDB_BALL_SIZE;
            top: $MDB_MARGIN;
            left: $MDB_WIDTH - $MDB_MARGIN - $MDB_BALL_SIZE;
            border-radius: $MDB_BALL_SIZE;
            background-color: $COLOR_DEF;
            opacity: 0.6;

            @include transit(left, width, opacity, background-color);

            &.dark {
              left: $MDB_MARGIN;
            }

            input[type="checkbox"] {
              display: none;
            }
          }
        }
      }

      .icon {
        width: $MDB_HEIGHT;
        height: $MDB_HEIGHT;
        margin-top: $MDB_TOP_FIX;
        opacity: 0.8;

        @include transit(opacity);

        &.moon path {
          fill: #163b88;
        }

        &.sun path {
          fill: #ffb700;
        }

        path {
          @include transit(fill);
        }
      }
    }
  }
}

@import "common";

$SIDE_LINE_WIDTH: 4px;
$SIDE_HOVER_BACKGROUND: rgba(160, 160, 160, 0.15);

@mixin commentCount {
  margin-left: 3px;
  font-size: 0.7rem;
  opacity: 0.5;
}

.sp-container {
  &:not(#search):not(#about-myself) {
    margin-top: $CONTENT_PADDING * 2;
    padding-top: $SIDE_LINE_WIDTH;
    padding-left: 4px;
    padding-right: 4px;
    position: relative;

    &::before {
      content: "";
      background-color: $COLOR_HL;
      opacity: 0.9;
      width: max($SIDE_LINE_WIDTH * 2.5 + 2px, 18px);
      height: $SIDE_LINE_WIDTH;
      position: absolute;
      top: 0;
      left: 0;
      border-radius: $SIDE_LINE_WIDTH / 2;
    }
  }

  .title {
    font-size: 1.3rem;
    font-weight: $W_BOLD;
    line-height: 2.3;
  }

  .list {
    list-style: none;
    padding-left: 0;
    margin: ($CONTENT_PADDING / 2) 0;

    &:empty {
      &::before {
        content: "등록된 내용이 없습니다.";
        color: $COLOR_GRAY;
        margin-left: 18px;
      }
    }

    a {
      padding: 11px 18px;
      display: block;
      opacity: 0.8;

      .meta {
        color: $COLOR_GRAY;
      }

      @include transit(background-color, color, opacity);
      @include noUnderlineEffect;
      @include onAnchorActive {
        background-color: $SIDE_HOVER_BACKGROUND;
        opacity: 1;

        .meta {
          color: $COLOR_GRAY;
        }
      }
    }

    .item {
      font-size: 1rem;
      font-weight: $W_NORMAL;
    }

    .comments-count {
      @include commentCount;
    }

    .meta {
      font-size: .96rem;
      opacity: .9;

      &:not(:last-child) {
        &::after {
          content: ", ";
        }
      }
    }
  }
}

#about-myself {
  $MYSELF_SIZE: 96px;

  &:first-child + #search {
    border-top: none;
    margin-top: $CONTENT_PADDING * 1.5;
    margin-bottom: $CONTENT_PADDING * 2.5 + $SIDE_LINE_WIDTH;
    padding-top: 0;

    &::before {
      display: none;
    }
  }

  .info {
    .author {
      font-size: 1.6rem;
      font-weight: $W_BOLD;
      line-height: 1;
      margin-bottom: $CONTENT_PADDING / 4;
    }

    .alternative {
      font-size: 1.15rem;
      font-weight: $W_NORMAL;
      margin-bottom: $CONTENT_PADDING / 2;
    }

    .description {
      color: $COLOR_GRAY;
    }
  }

  .rss {
    float: right;
    position: relative;
    margin-left: 10px;

    @include onAnchorActive {
      .icon {
        filter: opacity(1);

        &.rss- {
          &inner {
            animation: shiney 2.8s ease-in-out 0s infinite normal;
          }

          &outer {
            animation: shiney 2.8s ease-in-out 0.2s infinite normal;
          }
        }
      }

      .avatar {
        margin: ($MYSELF_SIZE / 4 + 2px) ($MYSELF_SIZE / 4 + 2px) 0 0;
        width: ($MYSELF_SIZE / 4) * 3 - 2px;
        height: ($MYSELF_SIZE / 4) * 3 - 2px;
      }
    }

    .icon {
      opacity: 0;
      filter: opacity(0);
      position: absolute;
      top: 0;
      right: 0;
      width: $MYSELF_SIZE / 2;
      height: $MYSELF_SIZE / 2;

      @include transit(filter);

      path {
        fill: $COLOR_HL;
      }
    }

    .avatar {
      width: $MYSELF_SIZE;
      height: $MYSELF_SIZE;
      box-shadow: $HEADER_SHADOW;
      border-radius: $MYSELF_SIZE / 2;

      @include transit(margin, width, height);
    }
  }
}

#search {
  form {
    $SEARCH_HEIGHT: 8.5 * $SIDE_LINE_WIDTH;
    $SEARCH_COLOR_HOVER: rgba(127, 127, 127, 0.8);
    $SEARCH_COLOR_NORMAL: rgba(127, 127, 127, 0.6);
    $SEARCH_MARGIN_RIGHT: max(20px - 2 * $SIDE_LINE_WIDTH, 0px);

    height: $SEARCH_HEIGHT;
    display: flex;
    border-collapse: collapse;
    position: relative;

    @include onAnchorActive {
      &::after {
        background-color: $SEARCH_COLOR_HOVER;
      }

      button {
        margin-left: -1 * (4px + $SEARCH_MARGIN_RIGHT);

        svg path {
          fill: $SEARCH_COLOR_HOVER;
        }
      }
    }

    &:focus-within {
      &::after {
        background-color: $COLOR_HL;
      }

      button:not(:focus) {
        margin-left: -1 * (7px + $SEARCH_MARGIN_RIGHT);
      }

      button {
        @include onAnchorActive {
          transform: perspective(620px) rotateX(20deg) translateY(2px);
        }

        svg path {
          fill: $COLOR_HL;
        }
      }
    }

    &::after {
      content: "";
      background-color: $SEARCH_COLOR_NORMAL;
      opacity: 0.9;
      width: 100%;
      height: $SIDE_LINE_WIDTH;
      border-radius: $SIDE_LINE_WIDTH / 2;
      position: absolute;
      bottom: -1 * $SIDE_LINE_WIDTH;
      left: 0;

      @include transit(background-color);
    }

    input,
    button {
      box-sizing: border-box;
      height: $SEARCH_HEIGHT;
      background: transparent;
      border: none;
    }

    input {
      $SEARCH_INPUT_MARGIN: 0.064rem * strip($SIDE_LINE_WIDTH);

      width: calc(100% - #{$SEARCH_HEIGHT});
      color: $COLOR_DEF_XH;
      caret-color: $COLOR_DEF_XH;
      font-size: 1rem;
      padding: 0 calc(#{$SEARCH_INPUT_MARGIN} + 7px + #{$SEARCH_MARGIN_RIGHT}) 0
        $SEARCH_INPUT_MARGIN;
      line-height: $SEARCH_HEIGHT;
      vertical-align: middle;
      opacity: 0.75;

      @include transit(caret-color, color, opacity);
      @include onAnchorActive {
        opacity: 1;
      }
    }

    button {
      width: $SEARCH_HEIGHT;
      padding: 0;
      cursor: pointer;
      margin-left: -1 * $SEARCH_MARGIN_RIGHT;

      @include transit(transform, margin-left);

      svg path {
        fill: $SEARCH_COLOR_NORMAL;
        opacity: 0.9;

        @include transit(fill);
      }
    }
  }
}

#categories {
  & > ul {
    opacity: 0.8;
    margin: ($CONTENT_PADDING / 2) 0;

    @include transit(opacity);
    @include onAnchorActive {
      opacity: 1;

      a {
        color: $COLOR_GRAY;
      }
    }

    &:not(:focus-within) {
      @include notOnAnchorActive {
        a.current {
          background-color: $SIDE_HOVER_BACKGROUND;
          color: $COLOR_HL !important;
        }
      }
    }
  }

  & > ul > li > a {
    display: none !important;
  }

  & > ul,
  & > ul > li > ul {
    margin-left: 0 !important;
    margin-bottom: 0 !important;

    & > li::before {
      display: none;
    }
  }

  ul {
    list-style: none;
    margin-left: 2.667rem;
    padding-left: 0;

    ul {
      margin-bottom: $CONTENT_PADDING / 2;
    }

    li {
      position: relative;

      &::before {
        content: "–";
        color: $COLOR_HL;
        position: absolute;
        height: 1rem;
        width: 1rem;
        left: -1.133rem;
        top: 10px;
        line-height: 1rem;
        font-size: 1rem;
      }

      a {
        padding: 10px;
        height: 1rem;
        font-size: 1rem;
        line-height: 1rem;
        display: block;

        @include transit(background-color, color);
        @include noUnderlineEffect;
        @include onAnchorActive {
          background-color: $SIDE_HOVER_BACKGROUND;
          color: $COLOR_HL !important;
        }

        .c_cnt {
          @include commentCount;
        }

        img {
          filter: grayscale(1);
        }
      }
    }
  }
}

#twitter {
  $TWITTER_HEIGHT: 540px;

  .twitter-container {
    max-height: $TWITTER_HEIGHT;
    box-shadow: $HEADER_SHADOW;
    border-radius: $CONTENT_RADIUS;
    background-color: $COLOR_INV_H;
    margin: ($CONTENT_PADDING / 2) 0;
    opacity: 0;
    overflow-y: auto;

    @include transit(background-color, opacity);

    .spinner-container {
      margin-top: ($TWITTER_HEIGHT - $SPINNER_SIZE) / 2;
      margin-bottom: ($TWITTER_HEIGHT - $SPINNER_SIZE) / 2;

      @include transit(opacity);
    }

    .twitter-timeline {
      display: none !important;

      &.visible {
        display: block !important;
      }
    }
  }
}

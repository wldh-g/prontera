@import "common";

$SEARCH_LINE_WIDTH: 6px;
$SIDE_HOVER_BACKGROUND: rgba(160, 160, 160, .15);

@mixin commentCount {
  margin-left: 3px;
  font-size: .7rem;
  opacity: .5;
}

.sp-container {
  &:not(:first-child) {
    margin-top: $CONTENT_PADDING * 2;
    padding-top: $SEARCH_LINE_WIDTH;
    position: relative;

    &::before {
      content: '';
      background-color: $COLOR_HL;
      opacity: .9;
      width: $SEARCH_LINE_WIDTH * 3 + 2px;
      height: $SEARCH_LINE_WIDTH;
      position: absolute;
      top: 0;
      left: -2px;
      border-radius: $SEARCH_LINE_WIDTH / 2;
    }
  }

  .title {
    font-size: 1.3rem;
    font-weight: $W_BOLD;
    line-height: 2.3;
  }

  .list {
    list-style: none;
    padding-left: 0;
    margin: ($CONTENT_PADDING / 2) 0;

    &:empty {
      &::before {
        content: '등록된 내용이 없습니다.';
        color: $COLOR_GRAY;
        margin-left: 18px;
      }
    }

    a {
      padding: 11px 18px;
      display: block;
      opacity: .8;

      :not(.item) {
        color: $COLOR_GRAY;
      }

      @include transit(background-color, color, opacity);
      @include noUnderlineEffect;
      @include onAnchorActive {
        background-color: $SIDE_HOVER_BACKGROUND;
        opacity: 1;

        :not(.item) {
          color: $COLOR_GRAY;
        }
      }
    }

    .item {
      font-size: 1.1rem;
      font-weight: $W_NORMAL;
    }

    .comments-count {
      @include commentCount;
    }

    .meta:not(:last-child) {
      &::after {
        content: ', ';
      }
    }
  }
}

#about-myself {
  $MYSELF_SIZE: 96px;

  &:first-child+#search {
    border-top: none;
    margin-top: $CONTENT_PADDING;
    padding-top: 0;

    &::before {
      display: none;
    }
  }

  .info {
    .author {
      font-size: 1.6rem;
      font-weight: $W_BOLD;
      line-height: 1;
      margin-bottom: $CONTENT_PADDING / 4;
    }

    .alternative {
      font-size: 1.15rem;
      font-weight: $W_NORMAL;
      margin-bottom: $CONTENT_PADDING / 2;
    }

    .description {
      color: $COLOR_GRAY;
    }
  }

  .rss {
    float: right;
    position: relative;
    margin-left: 10px;

    @include onAnchorActive {
      .icon {
        filter: opacity(1);

        &.rss- {
          &inner {
            animation: shiney 2.8s ease-in-out 0s infinite normal;
          }

          &outer {
            animation: shiney 2.8s ease-in-out .2s infinite normal;
          }
        }
      }

      .avatar {
        margin: ($MYSELF_SIZE / 4) ($MYSELF_SIZE / 4) 0 0;
        width: ($MYSELF_SIZE / 4) * 3;
        height: ($MYSELF_SIZE / 4) * 3;
      }
    }

    .icon {
      opacity: 0;
      filter: opacity(0);
      position: absolute;
      top: 0;
      right: 0;
      width: $MYSELF_SIZE / 2;
      height: $MYSELF_SIZE / 2;

      @include transit(filter);

      path {
        fill: $COLOR_HL;
      }
    }

    .avatar {
      width: $MYSELF_SIZE;
      height: $MYSELF_SIZE;
      box-shadow: $HEADER_SHADOW;
      border-radius: $MYSELF_SIZE / 2;

      @include transit(margin, width, height);
    }
  }
}

#search form {
  $SEARCH_HEIGHT: 48px;

  height: $SEARCH_HEIGHT;
  display: flex;
  border-collapse: collapse;
  position: relative;


  @include onAnchorActive {
    button {
      transform: translateX(-7px);
    }
  }

  &:focus-within {
    &::after {
      background-color: $COLOR_HL;
    }

    button {
      transform: translateX(-15px);

      @include onAnchorActive {
        transform: translateX(-15px) perspective(620px) rotateX(30deg) translateY(3px);
      }

      svg path {
        fill: $COLOR_HL;
      }
    }
  }

  &::after {
    content: '';
    background-color: $COLOR_GRAY;
    opacity: .9;
    width: 100%;
    height: $SEARCH_LINE_WIDTH;
    border-radius: $SEARCH_LINE_WIDTH / 2;
    position: absolute;
    bottom: -1 * $SEARCH_LINE_WIDTH;
    left: 0;

    @include transit(background-color);
  }

  input, button {
    box-sizing: border-box;
    height: $SEARCH_HEIGHT;
    background: transparent;
    border: none;
  }

  input {
    width: calc(100% - #{$SEARCH_HEIGHT});
    color: $COLOR_DEF_XH;
    caret-color: $COLOR_DEF_XH;
    font-size: 1rem;
    padding: 0 calc(.334rem + 15px) 0 .334rem;
    line-height: $SEARCH_HEIGHT;
    vertical-align: middle;
    opacity: .75;

    @include transit(caret-color, color, opacity);
    @include onAnchorActive {
      opacity: 1;
    }
  }

  button {
    width: $SEARCH_HEIGHT;
    padding: 0;
    cursor: pointer;
    transform: translateX(0);

    @include transit(transform);

    svg path {
      fill: $COLOR_GRAY;
      opacity: .9;

      @include transit(fill);
    }
  }
}

#categories {
  & > ul {
    opacity: .8;
    margin: ($CONTENT_PADDING / 2) 0;

    @include transit(opacity);
    @include onAnchorActive {
      opacity: 1;

      a {
        color: $COLOR_GRAY;
      }
    }
  }

  & > ul > li > a {
    display: none !important;
  }

  & > ul, & > ul > li > ul {
    margin-left: 0 !important;
    margin-bottom: 0 !important;

    & > li::before {
      display: none;
    }
  }

  ul {
    list-style: none;
    margin-left: 2.667rem;
    padding-left: 0;

    ul {
      margin-bottom: $CONTENT_PADDING / 2;
    }

    li {
      position: relative;

      &::before {
        content: '–';
        color: $COLOR_HL;
        position: absolute;
        height: 1rem;
        width: 1rem;
        left: -1.133rem;
        top: 10px;
        line-height: 1rem;
        font-size: 1rem;
      }

      a {
        padding: 10px;
        height: 1rem;
        font-size: 1rem;
        line-height: 1rem;
        display: block;

        @include transit(background-color, color);
        @include noUnderlineEffect;
        @include onAnchorActive {
          background-color: $SIDE_HOVER_BACKGROUND;
          color: $COLOR_HL !important;
        }

        .c_cnt {
          @include commentCount;
        }

        img {
          filter: grayscale(1);
        }
      }
    }
  }
}

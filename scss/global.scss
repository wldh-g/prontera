@import "common";

#goto-top {
  @include transit(transform, opacity);
  position: fixed;
  right: $FIXED_MARGIN_HORI;
  bottom: $FIXED_MARGIN_VERT;
  display: none;
  border-spacing: 10px;
  padding: 0 5px;
  pointer-events: none;
  background-color: $COLOR_DARK;
  color: $COLOR_LIGHT;
  opacity: 0;
  overflow: hidden;

  &.enabled {
    display: table;
    pointer-events: initial;
  }

  &.visible {
    opacity: 1;
  }

  &:hover, &:focus, &:active {
    text-decoration: none;
    transform: scale(.92);

    &::before {
      animation: boundUp 1.3s ease-out;
    }
  }

  &::before {
    width: 24px;
    height: 24px;
    content: '';
    background-image: url('./images/up.svg');
    background-size: cover;
    display: table-cell;
    vertical-align: middle;
  }

  span {
    display: table-cell;
  }
}

header.global {
  @include transit(top, background-color);
  z-index: 100;
  width: 100%;
  height: $HEADER_HEIGHT;
  box-sizing: border-box;
  padding: 0 $FIXED_MARGIN_HORI;
  background-color: $COLOR_LIGHT_H;
  box-shadow: 0px 0px 2px rgba(200, 200, 200, .6);
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  justify-content: space-between;

  &.hidden {
    top: -1 * ($HEADER_HEIGHT + 4px);
  }

  & > *, & > .inherit > * {
    height: $HEADER_HEIGHT;
    display: inline-flex;
    box-sizing: border-box;

    * {
      padding: 0;
    }
  }

  %paddedComponent {
    vertical-align: middle;
    padding: $HEADER_INNER_PADDING 0;
    height: $HEADER_INNER_HEIGHT;
    box-sizing: content-box;

    img, svg {
      width: auto;
      height: $HEADER_INNER_HEIGHT;
      max-height: $HEADER_INNER_HEIGHT;
    }
  }

  @mixin headerButton($horiPadding : 0, $hovOpacity : .24) {
    position: relative;

    &::before {
      @include transit(opacity);
      position: absolute;
      top: 0;
      left: -1 * $horiPadding;
      padding: 0 $horiPadding;
      box-sizing: content-box;
      width: 100%;
      height: $HEADER_HEIGHT;
      background-color: #999999;
      opacity: 0;
      z-index: -1;
      content: '';
    }

    &:hover, &:focus, &:target {
      &::before {
        opacity: $hovOpacity;
      }
    }
  }

  #identity {
    @extend %paddedComponent;
    @include headerButton(15px);

    &:hover, &:focus, &:target {
      text-decoration: none;
    }

    //- Identity Logo
    img {
      animation: shiney 2.4s infinite;
      padding-right: 10px;
    }

    //- Identity Text
    span {
      font-size: $HEADER_INNER_HEIGHT / $LINE_HEIGHT;
      font-weight: $W_BOLD;
    }
  }

  #menu ul {
    display: flex;
    margin: 0;

    li {
      @include headerButton(0, .1);

      $MENU_BOX_PADDING: 10px;

      display: table;
      padding: 0 $MENU_BOX_PADDING;
      cursor: pointer;
      box-sizing: border-box;
      list-style: none;

      a {
        $MENU_INDICATOR_HEIGHT: 4px;

        position: relative;
        display: table-cell;
        vertical-align: middle;
        text-align: center;
        box-sizing: border-box;
        padding: 0 10px ($MENU_INDICATOR_HEIGHT / 2);
        min-width: 110px - (2 * $MENU_BOX_PADDING);
        max-width: 25vw;
        height: $HEADER_HEIGHT;
        font-size: 1.2rem;

        &:hover, &:focus, &:target {
          text-decoration: none;
        }

        &.current {
          &::after {
            position: absolute;
            width: 90%;
            bottom: 5px;
            height: $MENU_INDICATOR_HEIGHT;
            left: 5%;
            background-color: $COLOR_HL;
            border-radius: $MENU_INDICATOR_HEIGHT;
            opacity: .7;
            content: '';
          }
        }
      }
    }
  }

  #shortcuts {
    @extend %paddedComponent;

    $SHORTCUT_SIZE: 26px;
    $SHORTCUT_PADDING_VERT: ($HEADER_INNER_HEIGHT - $SHORTCUT_SIZE) / 2;
    $SHORTCUT_PADDING_HORI: 20px;

    margin: 0;

    a {
      padding: $SHORTCUT_PADDING_VERT $SHORTCUT_PADDING_HORI $SHORTCUT_PADDING_VERT 0;

      &:hover, &:focus {
        img, svg {
          transform: scale(1.4);
        }
      }

      img, svg {
        @include transit(transform);
        height: $SHORTCUT_SIZE;
        width: auto;
      }
    }
  }

  #modarkbul {
    @extend %paddedComponent;
    @include transit(opacity);

    $MDB_WIDTH: 40px;
    $MDB_HEIGHT: 22px;
    $MDB_BALL_SIZE: 14px;
    $MDB_ELASTICITY: 4px;
    $MDB_FUSS: 3px;
    $MDB_MARGIN: ($MDB_HEIGHT - $MDB_BALL_SIZE) / 2;
    $MDB_TOP_FIX: ($MDB_HEIGHT - 1.2px - $MDB_BALL_SIZE) / 3;

    display: table;
    border-spacing: 10px;
    cursor: pointer;
    opacity: 0;

    & > * {
      display: table-cell;
      vertical-align: middle;
    }

    &:hover, &:focus {
      .container .border label {
        left: $MDB_WIDTH - $MDB_MARGIN - $MDB_BALL_SIZE - $MDB_ELASTICITY - $MDB_FUSS;
        width: $MDB_BALL_SIZE + $MDB_ELASTICITY;

        &.dark {
          left: $MDB_MARGIN + $MDB_FUSS;
        }
      }
    }

    .container {
      .border {
        @include transit(background-color);
        border-radius: $MDB_HEIGHT;
        width: $MDB_WIDTH;
        height: $MDB_HEIGHT;
        position: relative;
        background-color: #dfdfdf;
        margin-top: $MDB_TOP_FIX;

        label {
          @include transit(left, width);
          position: absolute;
          width: $MDB_BALL_SIZE;
          height: $MDB_BALL_SIZE;
          top: $MDB_MARGIN;
          left: $MDB_WIDTH - $MDB_MARGIN - $MDB_BALL_SIZE;
          border-radius: $MDB_BALL_SIZE;
          background-color: $COLOR_HL;

          &.dark {
            left: $MDB_MARGIN;
          }

          input[type="checkbox"] { display: none; }
        }
      }
    }

    .icon {
      width: $MDB_HEIGHT;
      height: $MDB_HEIGHT;
      margin-top: $MDB_TOP_FIX;

      &.moon path {
        fill: #0e2d6c;
      }

      &.sun path {
        fill: #ffb700;
      }
    }
  }
}
